from pydub import AudioSegment
from scipy.signal import cheby2, filtfilt
import numpy as np

# Load the WAV file
input_file = "input.wav"
output_file = "output_filtered.wav"

audio = AudioSegment.from_wav(input_file)

# Convert the audio to a numpy array
samples = np.array(audio.get_array_of_samples())
sample_rate = audio.frame_rate

# Design the Chebyshev Type 2 low-pass filter
cutoff_freq = 4000  # Cutoff frequency in Hz
order = 5  # Filter order
rs = 40  # Stopband attenuation in dB
nyquist = 0.5 * sample_rate
normal_cutoff = cutoff_freq / nyquist

# Get the filter coefficients
b, a = cheby2(order, rs, normal_cutoff, btype='low', analog=False)

# Apply the filter to the audio data
filtered_samples = filtfilt(b, a, samples)

# Convert the filtered samples back to an AudioSegment
filtered_audio = AudioSegment(
    filtered_samples.astype(np.int16).tobytes(),
    frame_rate=sample_rate,
    sample_width=audio.sample_width,
    channels=audio.channels
)

# Export the filtered audio to a new WAV file
filtered_audio.export(output_file, format="wav")

print(f"Filtered audio saved to {output_file}")
